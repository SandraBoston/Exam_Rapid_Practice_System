"""
PCEP Module 4 Test Questions Dataset
===================================

Auto-generated from PE1 -- Module 4 Test HTML file.
Contains all questions with Python syntax highlighting and clean formatting.

Generated by: html_to_questions_converter.py
Date: 2025-01-09
Total Questions: 22
"""

# Pygments CSS for syntax highlighting
PYGMENTS_CSS = """
pre { line-height: 125%; }
td.linenos .normal { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }
span.linenos { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }
td.linenos .special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }
span.linenos.special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }
.highlight .hll { background-color: #ffffcc }
.highlight { background: #f8f8f8; }
.highlight .c { color: #3D7B7B; font-style: italic } /* Comment */
.highlight .err { border: 1px solid #F00 } /* Error */
.highlight .k { color: #008000; font-weight: bold } /* Keyword */
.highlight .o { color: #666 } /* Operator */
.highlight .ch { color: #3D7B7B; font-style: italic } /* Comment.Hashbang */
.highlight .cm { color: #3D7B7B; font-style: italic } /* Comment.Multiline */
.highlight .cp { color: #9C6500 } /* Comment.Preproc */
.highlight .cpf { color: #3D7B7B; font-style: italic } /* Comment.PreprocFile */
.highlight .c1 { color: #3D7B7B; font-style: italic } /* Comment.Single */
.highlight .cs { color: #3D7B7B; font-style: italic } /* Comment.Special */
.highlight .gd { color: #A00000 } /* Generic.Deleted */
.highlight .ge { font-style: italic } /* Generic.Emph */
.highlight .ges { font-weight: bold; font-style: italic } /* Generic.EmphStrong */
.highlight .gr { color: #E40000 } /* Generic.Error */
.highlight .gh { color: #000080; font-weight: bold } /* Generic.Heading */
.highlight .gi { color: #008400 } /* Generic.Inserted */
.highlight .go { color: #717171 } /* Generic.Output */
.highlight .gp { color: #000080; font-weight: bold } /* Generic.Prompt */
.highlight .gs { font-weight: bold } /* Generic.Strong */
.highlight .gu { color: #800080; font-weight: bold } /* Generic.Subheading */
.highlight .gt { color: #04D } /* Generic.Traceback */
.highlight .kc { color: #008000; font-weight: bold } /* Keyword.Constant */
.highlight .kd { color: #008000; font-weight: bold } /* Keyword.Declaration */
.highlight .kn { color: #008000; font-weight: bold } /* Keyword.Namespace */
.highlight .kp { color: #008000 } /* Keyword.Pseudo */
.highlight .kr { color: #008000; font-weight: bold } /* Keyword.Reserved */
.highlight .kt { color: #B00040 } /* Keyword.Type */
.highlight .m { color: #666 } /* Literal.Number */
.highlight .s { color: #BA2121 } /* Literal.String */
.highlight .na { color: #687822 } /* Name.Attribute */
.highlight .nb { color: #008000 } /* Name.Builtin */
.highlight .nc { color: #00F; font-weight: bold } /* Name.Class */
.highlight .no { color: #800 } /* Name.Constant */
.highlight .nd { color: #A2F } /* Name.Decorator */
.highlight .ni { color: #717171; font-weight: bold } /* Name.Entity */
.highlight .ne { color: #CB3F38; font-weight: bold } /* Name.Exception */
.highlight .nf { color: #00F } /* Name.Function */
.highlight .nl { color: #767600 } /* Name.Label */
.highlight .nn { color: #00F; font-weight: bold } /* Name.Namespace */
.highlight .nt { color: #008000; font-weight: bold } /* Name.Tag */
.highlight .nv { color: #19177C } /* Name.Variable */
.highlight .ow { color: #A2F; font-weight: bold } /* Operator.Word */
.highlight .w { color: #BBB } /* Text.Whitespace */
.highlight .mb { color: #666 } /* Literal.Number.Bin */
.highlight .mf { color: #666 } /* Literal.Number.Float */
.highlight .mh { color: #666 } /* Literal.Number.Hex */
.highlight .mi { color: #666 } /* Literal.Number.Integer */
.highlight .mo { color: #666 } /* Literal.Number.Oct */
.highlight .sa { color: #BA2121 } /* Literal.String.Affix */
.highlight .sb { color: #BA2121 } /* Literal.String.Backtick */
.highlight .sc { color: #BA2121 } /* Literal.String.Char */
.highlight .dl { color: #BA2121 } /* Literal.String.Delimiter */
.highlight .sd { color: #BA2121; font-style: italic } /* Literal.String.Doc */
.highlight .s2 { color: #BA2121 } /* Literal.String.Double */
.highlight .se { color: #AA5D1F; font-weight: bold } /* Literal.String.Escape */
.highlight .sh { color: #BA2121 } /* Literal.String.Heredoc */
.highlight .si { color: #A45A77; font-weight: bold } /* Literal.String.Interpol */
.highlight .sx { color: #008000 } /* Literal.String.Other */
.highlight .sr { color: #A45A77 } /* Literal.String.Regex */
.highlight .s1 { color: #BA2121 } /* Literal.String.Single */
.highlight .ss { color: #19177C } /* Literal.String.Symbol */
.highlight .bp { color: #008000 } /* Name.Builtin.Pseudo */
.highlight .fm { color: #00F } /* Name.Function.Magic */
.highlight .vc { color: #19177C } /* Name.Variable.Class */
.highlight .vg { color: #19177C } /* Name.Variable.Global */
.highlight .vi { color: #19177C } /* Name.Variable.Instance */
.highlight .vm { color: #19177C } /* Name.Variable.Magic */
.highlight .il { color: #666 } /* Literal.Number.Integer.Long */
"""

# Complete questions dataset
PCEP_MODULE_4_QUESTIONS = [
  {
    "id": 65658,
    "question": "The following snippet:\n\n[CODE_BLOCK_0]",
    "code_blocks": [
      {
        "original": "def func_1(a): return a ** a def func_2(a): return func_1(a) * func_1(a)\nprint(func_2(2)) ",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">func_1</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">):</span> <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">**</span> <span class=\"n\">a</span> <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">func_2</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">):</span> <span class=\"k\">return</span> <span class=\"n\">func_1</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">func_1</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">func_2</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">))</span> \n</pre></div>\n"
      }
    ],
    "options": [
      {
        "id": 247562,
        "text": "will output `16`",
        "code_blocks": []
      },
      {
        "id": 247563,
        "text": "will output `4`",
        "code_blocks": []
      },
      {
        "id": 247564,
        "text": "will output `2`",
        "code_blocks": []
      },
      {
        "id": 247565,
        "text": "is erroneous",
        "code_blocks": []
      }
    ],
    "type": "single",
    "multiple_choice": false,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65658,
      "question": "<p>The following snippet:</p>\n\n<code class=\"codep\">def func_1(a):\n    return a ** a\n\n\ndef func_2(a):\n    return func_1(a) * func_1(a)\n\n\nprint(func_2(2))\n\n</code>\n<br>",
      "type": "Single Choice",
      "htmlType": "radio",
      "optionsText": null,
      "options": [
        {
          "id": 247562,
          "option": "<p>will output <code >16</code></p>"
        },
        {
          "id": 247563,
          "option": "<p>will output <code >4</code></p>"
        },
        {
          "id": 247564,
          "option": "<p>will output <code >2</code></p>"
        },
        {
          "id": 247565,
          "option": "<p>is erroneous</p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65667,
    "question": "What is the output of the following snippet?\n\n[CODE_BLOCK_0]",
    "code_blocks": [
      {
        "original": "def fun(inp=2, out=3): return inp * out print(fun(out=2)) ",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">fun</span><span class=\"p\">(</span><span class=\"n\">inp</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">out</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">):</span> <span class=\"k\">return</span> <span class=\"n\">inp</span> <span class=\"o\">*</span> <span class=\"n\">out</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">fun</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">))</span> \n</pre></div>\n"
      }
    ],
    "options": [
      {
        "id": 247598,
        "text": "`4`",
        "code_blocks": []
      },
      {
        "id": 247599,
        "text": "`6`",
        "code_blocks": []
      },
      {
        "id": 247600,
        "text": "`2`",
        "code_blocks": []
      },
      {
        "id": 247601,
        "text": "the snippet is erroneous",
        "code_blocks": []
      }
    ],
    "type": "single",
    "multiple_choice": false,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65667,
      "question": "<p>What is the output of the following snippet?</p>\n\n<code class=\"codep\">def fun(inp=2, out=3):\n    return inp * out\n\n\nprint(fun(out=2))\n\n</code>\n<br>",
      "type": "Single Choice",
      "htmlType": "radio",
      "optionsText": null,
      "options": [
        {
          "id": 247598,
          "option": "<p><code >4</code></p>"
        },
        {
          "id": 247599,
          "option": "<p><code >6</code></p>"
        },
        {
          "id": 247600,
          "option": "<p><code >2</code></p>"
        },
        {
          "id": 247601,
          "option": "<p>the snippet is erroneous</p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65663,
    "question": "What is the output of the following snippet?\n\n[CODE_BLOCK_0]",
    "code_blocks": [
      {
        "original": "def any(): print(var + 1, end='') var = 1 any() print(var) ",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">any</span><span class=\"p\">():</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">var</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">end</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span> <span class=\"n\">var</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"nb\">any</span><span class=\"p\">()</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">var</span><span class=\"p\">)</span> \n</pre></div>\n"
      }
    ],
    "options": [
      {
        "id": 247582,
        "text": "`21`",
        "code_blocks": []
      },
      {
        "id": 247583,
        "text": "`12`",
        "code_blocks": []
      },
      {
        "id": 247584,
        "text": "`11`",
        "code_blocks": []
      },
      {
        "id": 247585,
        "text": "`22`",
        "code_blocks": []
      }
    ],
    "type": "single",
    "multiple_choice": false,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65663,
      "question": "<p>What is the output of the following snippet?</p>\n\n<code class=\"codep\">def any():\n    print(var + 1, end='')\n\n\nvar = 1\nany()\nprint(var)\n\n</code>\n<br>",
      "type": "Single Choice",
      "htmlType": "radio",
      "optionsText": null,
      "options": [
        {
          "id": 247582,
          "option": "<p><code >21</code></p>"
        },
        {
          "id": 247583,
          "option": "<p><code >12</code></p>"
        },
        {
          "id": 247584,
          "option": "<p><code >11</code></p>"
        },
        {
          "id": 247585,
          "option": "<p><code >22</code></p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65671,
    "question": "What is the output of the following code?\n\n[CODE_BLOCK_0]",
    "code_blocks": [
      {
        "original": "try: value = input(\"Enter a value: \") print(value/value) except ValueError:\nprint(\"Bad input...\") except ZeroDivisionError: print(\"Very bad input...\")\nexcept TypeError: print(\"Very very bad input...\") except: print(\"Booo!\") ",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"k\">try</span><span class=\"p\">:</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">&quot;Enter a value: &quot;</span><span class=\"p\">)</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">/</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Bad input...&quot;</span><span class=\"p\">)</span> <span class=\"k\">except</span> <span class=\"ne\">ZeroDivisionError</span><span class=\"p\">:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Very bad input...&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Very very bad input...&quot;</span><span class=\"p\">)</span> <span class=\"k\">except</span><span class=\"p\">:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Booo!&quot;</span><span class=\"p\">)</span> \n</pre></div>\n"
      },
      {
        "original": "value = input(\"Enter a value: \") print(value/value) except ValueError:\nprint(\"Bad input...\") except ZeroDivisionError: print(\"Very bad input...\")\n",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">&quot;Enter a value: &quot;</span><span class=\"p\">)</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">/</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Bad input...&quot;</span><span class=\"p\">)</span> <span class=\"k\">except</span> <span class=\"ne\">ZeroDivisionError</span><span class=\"p\">:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Very bad input...&quot;</span><span class=\"p\">)</span>\n</pre></div>\n"
      }
    ],
    "options": [
      {
        "id": 247614,
        "text": "`Very very bad input...`",
        "code_blocks": []
      },
      {
        "id": 247615,
        "text": "`Very bad input...`",
        "code_blocks": []
      },
      {
        "id": 247616,
        "text": "`Bad input...`",
        "code_blocks": []
      },
      {
        "id": 247617,
        "text": "`Booo!`",
        "code_blocks": []
      }
    ],
    "type": "single",
    "multiple_choice": false,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65671,
      "question": "<p>What is the output of the following code?</p>\n\n<p><code class=\"codep\">try:\n    value = input(\"Enter a value: \")\n    print(value/value)\nexcept ValueError:\n    print(\"Bad input...\")\nexcept ZeroDivisionError:\n    print(\"Very bad input...\")\nexcept TypeError:\n    print(\"Very very bad input...\")\nexcept:\n    print(\"Booo!\")\n\n</code></p>",
      "type": "Single Choice",
      "htmlType": "radio",
      "optionsText": null,
      "options": [
        {
          "id": 247614,
          "option": "<p><code >Very very bad input...</code></p>"
        },
        {
          "id": 247615,
          "option": "<p><code >Very bad input...</code></p>"
        },
        {
          "id": 247616,
          "option": "<p><code >Bad input...</code></p>"
        },
        {
          "id": 247617,
          "option": "<p><code >Booo!</code></p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65657,
    "question": "The following snippet:\n\n[CODE_BLOCK_0]",
    "code_blocks": [
      {
        "original": "def func(a, b): return a ** a print(func(2)) ",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span> <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">**</span> <span class=\"n\">a</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">))</span> \n</pre></div>\n"
      }
    ],
    "options": [
      {
        "id": 247558,
        "text": "is erroneous",
        "code_blocks": []
      },
      {
        "id": 247559,
        "text": "will output `4`",
        "code_blocks": []
      },
      {
        "id": 247560,
        "text": "will output `2`",
        "code_blocks": []
      },
      {
        "id": 247561,
        "text": "will return `None`",
        "code_blocks": []
      }
    ],
    "type": "single",
    "multiple_choice": false,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65657,
      "question": "<p>The following snippet:</p>\n\n<code class=\"codep\">def func(a, b):\n    return a ** a\n\n\nprint(func(2))\n\n</code>\n<br>",
      "type": "Single Choice",
      "htmlType": "radio",
      "optionsText": null,
      "options": [
        {
          "id": 247558,
          "option": "<p>is erroneous</p>"
        },
        {
          "id": 247559,
          "option": "<p>will output <code >4</code></p>"
        },
        {
          "id": 247560,
          "option": "<p>will output <code >2</code></p>"
        },
        {
          "id": 247561,
          "option": "<p>will return <code >None</code></p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65668,
    "question": "What is the output of the following snippet?\n\n[CODE_BLOCK_0]",
    "code_blocks": [
      {
        "original": "dictionary = {'one': 'two', 'three': 'one', 'two': 'three'} v =\ndictionary['one'] for k in range(len(dictionary)): v = dictionary[v] print(v)\n",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"n\">dictionary</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;one&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;two&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;three&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;one&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;two&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;three&#39;</span><span class=\"p\">}</span> <span class=\"n\">v</span> <span class=\"o\">=</span>\n<span class=\"n\">dictionary</span><span class=\"p\">[</span><span class=\"s1\">&#39;one&#39;</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">dictionary</span><span class=\"p\">)):</span> <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">dictionary</span><span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">]</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n</pre></div>\n"
      },
      {
        "original": "dictionary = {'one': 'two', 'three': 'one', 'two': 'three'} v =\ndictionary['one'] for k in range(len(dictionary)): v = dictionary[v] print(v)\n",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"n\">dictionary</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;one&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;two&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;three&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;one&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;two&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;three&#39;</span><span class=\"p\">}</span> <span class=\"n\">v</span> <span class=\"o\">=</span>\n<span class=\"n\">dictionary</span><span class=\"p\">[</span><span class=\"s1\">&#39;one&#39;</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">dictionary</span><span class=\"p\">)):</span> <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">dictionary</span><span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">]</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n</pre></div>\n"
      }
    ],
    "options": [
      {
        "id": 247602,
        "text": "`two`",
        "code_blocks": []
      },
      {
        "id": 247603,
        "text": "`three`",
        "code_blocks": []
      },
      {
        "id": 247604,
        "text": "`one`",
        "code_blocks": []
      },
      {
        "id": 247605,
        "text": "`('one', 'two', 'three')`",
        "code_blocks": []
      }
    ],
    "type": "single",
    "multiple_choice": false,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65668,
      "question": "<p>What is the output of the following snippet?</p>\n\n<code class=\"codep\">dictionary = {'one': 'two', 'three': 'one', 'two': 'three'}\nv = dictionary['one']\n\nfor k in range(len(dictionary)):\n    v = dictionary[v]\n\nprint(v)\n\n</code>\n<br>",
      "type": "Single Choice",
      "htmlType": "radio",
      "optionsText": null,
      "options": [
        {
          "id": 247602,
          "option": "<p><code >two</code></p>"
        },
        {
          "id": 247603,
          "option": "<p><code >three</code></p>"
        },
        {
          "id": 247604,
          "option": "<p><code >one</code></p>"
        },
        {
          "id": 247605,
          "option": "<p><code >('one', 'two', 'three')</code></p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65650,
    "question": "Which one of the following lines properly starts a parameterless function\ndefinition?",
    "code_blocks": [],
    "options": [
      {
        "id": 247530,
        "text": "[CODE_BLOCK_0]",
        "code_blocks": [
          {
            "original": "def fun():",
            "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">fun</span><span class=\"p\">():</span>\n</pre></div>\n"
          }
        ]
      },
      {
        "id": 247531,
        "text": "[CODE_BLOCK_0]",
        "code_blocks": [
          {
            "original": "def fun:",
            "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">fun</span><span class=\"p\">:</span>\n</pre></div>\n"
          }
        ]
      },
      {
        "id": 247532,
        "text": "`function fun():`",
        "code_blocks": []
      },
      {
        "id": 247533,
        "text": "`fun function():`",
        "code_blocks": []
      }
    ],
    "type": "single",
    "multiple_choice": false,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65650,
      "question": "<p>Which one of the following lines properly starts a parameterless function definition?</p>",
      "type": "Single Choice",
      "htmlType": "radio",
      "optionsText": null,
      "options": [
        {
          "id": 247530,
          "option": "<p><code >def fun():</code></p>"
        },
        {
          "id": 247531,
          "option": "<p><code >def fun:</code></p>"
        },
        {
          "id": 247532,
          "option": "<p><code >function fun():</code></p>"
        },
        {
          "id": 247533,
          "option": "<p><code >fun function():</code></p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65652,
    "question": "A built-in function is a function which:",
    "code_blocks": [],
    "options": [
      {
        "id": 247538,
        "text": "comes with Python, and is an integral part of Python",
        "code_blocks": []
      },
      {
        "id": 247539,
        "text": "has been placed within your code by another programmer",
        "code_blocks": []
      },
      {
        "id": 247540,
        "text": "has to be imported before use",
        "code_blocks": []
      },
      {
        "id": 247541,
        "text": "is hidden from programmers",
        "code_blocks": []
      }
    ],
    "type": "single",
    "multiple_choice": false,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65652,
      "question": "<p>A built-in function is a function which:</p>",
      "type": "Single Choice",
      "htmlType": "radio",
      "optionsText": null,
      "options": [
        {
          "id": 247538,
          "option": "<p>comes with Python, and is an integral part of Python</p>"
        },
        {
          "id": 247539,
          "option": "<p>has been placed within your code by another programmer</p>"
        },
        {
          "id": 247540,
          "option": "<p>has to be imported before use</p>"
        },
        {
          "id": 247541,
          "option": "<p>is hidden from programmers</p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65662,
    "question": "What is the output of the following snippet?\n\n[CODE_BLOCK_0]",
    "code_blocks": [
      {
        "original": "def fun(x): global y y = x * x return y fun(2) print(y) ",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">fun</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span> <span class=\"k\">global</span> <span class=\"n\">y</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">x</span> <span class=\"k\">return</span> <span class=\"n\">y</span> <span class=\"n\">fun</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span> \n</pre></div>\n"
      }
    ],
    "options": [
      {
        "id": 247578,
        "text": "`4`",
        "code_blocks": []
      },
      {
        "id": 247579,
        "text": "`2`",
        "code_blocks": []
      },
      {
        "id": 247580,
        "text": "None",
        "code_blocks": []
      },
      {
        "id": 247581,
        "text": "the code will cause a runtime error",
        "code_blocks": []
      }
    ],
    "type": "single",
    "multiple_choice": false,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65662,
      "question": "<p>What is the output of the following snippet?</p>\n\n<code class=\"codep\">def fun(x):\n    global y\n    y = x * x\n    return y\n\n\nfun(2)\nprint(y)\n\n</code>\n<br>",
      "type": "Single Choice",
      "htmlType": "radio",
      "optionsText": null,
      "options": [
        {
          "id": 247578,
          "option": "<p><code >4</code></p>"
        },
        {
          "id": 247579,
          "option": "<p><code >2</code></p>"
        },
        {
          "id": 247580,
          "option": "<p>None</p>"
        },
        {
          "id": 247581,
          "option": "<p>the code will cause a runtime error</p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65670,
    "question": "Select the _true_ statements about the _try-except_ block in relation to the\nfollowing example. (Select _two_ answers.)\n\n[CODE_BLOCK_0]",
    "code_blocks": [
      {
        "original": "try: # Some code is here... except: # Some code is here... ",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"k\">try</span><span class=\"p\">:</span> <span class=\"c1\"># Some code is here... except: # Some code is here... </span>\n</pre></div>\n"
      }
    ],
    "options": [
      {
        "id": 247610,
        "text": "If you suspect that a snippet may raise an exception, you should place it in\nthe `try` block.",
        "code_blocks": []
      },
      {
        "id": 247611,
        "text": "The code that follows the [CODE_BLOCK_0] statement will be executed if the code in\nthe `try` clause runs into an error.",
        "code_blocks": [
          {
            "original": "except",
            "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"k\">except</span>\n</pre></div>\n"
          }
        ]
      },
      {
        "id": 247612,
        "text": "If there is a syntax error in code located in the `try` block, the [CODE_BLOCK_0]\nbranch will **not** handle it, and a _SyntaxError_ exception will be raised\ninstead.",
        "code_blocks": [
          {
            "original": "except",
            "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"k\">except</span>\n</pre></div>\n"
          }
        ]
      },
      {
        "id": 247613,
        "text": "The code that follows the `try` statement will be executed if the code in the\n[CODE_BLOCK_0] clause runs into an error.",
        "code_blocks": [
          {
            "original": "except",
            "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"k\">except</span>\n</pre></div>\n"
          }
        ]
      }
    ],
    "type": "multiple",
    "multiple_choice": true,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65670,
      "question": "<p>Select the <u>true</u> statements about the <i>try-except</i> block in relation to the following example. (Select <u>two</u> answers.)</p>\n\n<p><code class=\"codep\">try:\n    # Some code is here...\nexcept:\n    # Some code is here...\n\n</code></p>",
      "type": "Multiple Choice",
      "htmlType": "checkbox",
      "optionsText": null,
      "options": [
        {
          "id": 247610,
          "option": "<p>If you suspect that a snippet may raise an exception, you should place it in the <code >try</code> block.</p>"
        },
        {
          "id": 247611,
          "option": "<p>The code that follows the <code >except</code> statement will be executed if the code in the <code >try</code> clause runs into an error.</p>"
        },
        {
          "id": 247612,
          "option": "<p>If there is a syntax error in code located in the <code >try</code> block, the <code >except</code> branch will <b>not</b> handle it, and a <i>SyntaxError</i> exception will be raised instead.</p>"
        },
        {
          "id": 247613,
          "option": "<p>The code that follows the <code >try</code> statement will be executed if the code in the <code >except</code> clause runs into an error.</p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65655,
    "question": "What is the output of the following snippet?\n\n[CODE_BLOCK_0]",
    "code_blocks": [
      {
        "original": "def fun(x): x += 1 return x x = 2 x = fun(x + 1) print(x) ",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">fun</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span> <span class=\"n\">x</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span> <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">fun</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> \n</pre></div>\n"
      }
    ],
    "options": [
      {
        "id": 247550,
        "text": "`4`",
        "code_blocks": []
      },
      {
        "id": 247551,
        "text": "`5`",
        "code_blocks": []
      },
      {
        "id": 247552,
        "text": "`3`",
        "code_blocks": []
      },
      {
        "id": 247553,
        "text": "the code is erroneous",
        "code_blocks": []
      }
    ],
    "type": "single",
    "multiple_choice": false,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65655,
      "question": "<p>What is the output of the following snippet?</p>\n\n<code class=\"codep\">def fun(x):\n    x += 1\n    return x\n\n\nx = 2\nx = fun(x + 1)\nprint(x)\n\n</code>\n<br>",
      "type": "Single Choice",
      "htmlType": "radio",
      "optionsText": null,
      "options": [
        {
          "id": 247550,
          "option": "<p><code >4</code></p>"
        },
        {
          "id": 247551,
          "option": "<p><code >5</code></p>"
        },
        {
          "id": 247552,
          "option": "<p><code >3</code></p>"
        },
        {
          "id": 247553,
          "option": "<p>the code is erroneous</p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65656,
    "question": "What code would you insert instead of the comment to obtain the expected\noutput?\n\nExpected output:\n\n`a b c`  \n\nCode:\n\n[CODE_BLOCK_0]",
    "code_blocks": [
      {
        "original": "dictionary = {} my_list = ['a', 'b', 'c', 'd'] for i in range(len(my_list) -\n1): dictionary[my_list[i]] = (my_list[i], ) for i in\nsorted(dictionary.keys()): k = dictionary[i] # Insert your code here. ",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"n\">dictionary</span> <span class=\"o\">=</span> <span class=\"p\">{}</span> <span class=\"n\">my_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;c&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;d&#39;</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">my_list</span><span class=\"p\">)</span> <span class=\"o\">-</span>\n<span class=\"mi\">1</span><span class=\"p\">):</span> <span class=\"n\">dictionary</span><span class=\"p\">[</span><span class=\"n\">my_list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">my_list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span>\n<span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">dictionary</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span> <span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"n\">dictionary</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"c1\"># Insert your code here. </span>\n</pre></div>\n"
      },
      {
        "original": "dictionary = {} my_list = ['a', 'b', 'c', 'd'] for i in range(len(my_list) -\n",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"n\">dictionary</span> <span class=\"o\">=</span> <span class=\"p\">{}</span> <span class=\"n\">my_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;c&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;d&#39;</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">my_list</span><span class=\"p\">)</span> <span class=\"o\">-</span>\n</pre></div>\n"
      }
    ],
    "options": [
      {
        "id": 247554,
        "text": "[CODE_BLOCK_0]",
        "code_blocks": [
          {
            "original": "print(k[0])",
            "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n</pre></div>\n"
          }
        ]
      },
      {
        "id": 247555,
        "text": "[CODE_BLOCK_0]",
        "code_blocks": [
          {
            "original": "print(k['0'])",
            "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">[</span><span class=\"s1\">&#39;0&#39;</span><span class=\"p\">])</span>\n</pre></div>\n"
          }
        ]
      },
      {
        "id": 247556,
        "text": "[CODE_BLOCK_0]",
        "code_blocks": [
          {
            "original": "print(k)",
            "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">)</span>\n</pre></div>\n"
          }
        ]
      },
      {
        "id": 247557,
        "text": "[CODE_BLOCK_0]",
        "code_blocks": [
          {
            "original": "print(k[\"0\"])",
            "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">[</span><span class=\"s2\">&quot;0&quot;</span><span class=\"p\">])</span>\n</pre></div>\n"
          }
        ]
      }
    ],
    "type": "single",
    "multiple_choice": false,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65656,
      "question": "<p>What code would you insert instead of the comment to obtain the expected output?</p>\n\n<p>Expected output:</p>\n<code class=\"codep\">a\nb\nc</code>\n<br>\n\n<p>Code:</p>\n\n<code class=\"codep\">dictionary = {}\nmy_list = ['a', 'b', 'c', 'd']\n\nfor i in range(len(my_list) - 1):\n    dictionary[my_list[i]] = (my_list[i], )\n\nfor i in sorted(dictionary.keys()):\n    k = dictionary[i]\n    <mark style=\"background-color:#e6f2ff;\"># Insert your code here.</mark>\n\n</code>\n<br>",
      "type": "Single Choice",
      "htmlType": "radio",
      "optionsText": null,
      "options": [
        {
          "id": 247554,
          "option": "<p><code >print(k[0])</code></p>"
        },
        {
          "id": 247555,
          "option": "<p><code >print(k['0'])</code></p>"
        },
        {
          "id": 247556,
          "option": "<p><code >print(k)</code></p>"
        },
        {
          "id": 247557,
          "option": "<p><code >print(k[\"0\"])</code></p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65653,
    "question": "The fact that tuples belong to sequence types means that:",
    "code_blocks": [],
    "options": [
      {
        "id": 247542,
        "text": "they can be indexed and sliced like lists",
        "code_blocks": []
      },
      {
        "id": 247543,
        "text": "they can be extended using the `.append()` method",
        "code_blocks": []
      },
      {
        "id": 247544,
        "text": "they can be modified using the `del` instruction",
        "code_blocks": []
      },
      {
        "id": 247545,
        "text": "they are actually lists",
        "code_blocks": []
      }
    ],
    "type": "single",
    "multiple_choice": false,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65653,
      "question": "<p>The fact that tuples belong to sequence types means that:</p>",
      "type": "Single Choice",
      "htmlType": "radio",
      "optionsText": null,
      "options": [
        {
          "id": 247542,
          "option": "<p>they can be indexed and sliced like lists</p>"
        },
        {
          "id": 247543,
          "option": "<p>they can be extended using the <code >.append()</code> method</p>"
        },
        {
          "id": 247544,
          "option": "<p>they can be modified using the <code >del</code> instruction</p>"
        },
        {
          "id": 247545,
          "option": "<p>they are actually lists</p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65651,
    "question": "A function defined in the following way: (Select _two_ answers)\n\n[CODE_BLOCK_0]",
    "code_blocks": [
      {
        "original": "def function(x=0): return x ",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">function</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span> <span class=\"k\">return</span> <span class=\"n\">x</span> \n</pre></div>\n"
      }
    ],
    "options": [
      {
        "id": 247534,
        "text": "may be invoked without any argument",
        "code_blocks": []
      },
      {
        "id": 247535,
        "text": "must be invoked with exactly one argument",
        "code_blocks": []
      },
      {
        "id": 247536,
        "text": "may be invoked with exactly one argument",
        "code_blocks": []
      },
      {
        "id": 247537,
        "text": "must be invoked without any argument",
        "code_blocks": []
      }
    ],
    "type": "multiple",
    "multiple_choice": true,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65651,
      "question": "<p>A function defined in the following way:&nbsp;&nbsp;(Select <u>two</u> answers)</p>\n\n<code class=\"codep\">def function(x=0):\n    return x\n\n</code>\n<br>",
      "type": "Multiple Choice",
      "htmlType": "checkbox",
      "optionsText": null,
      "options": [
        {
          "id": 247534,
          "option": "<p>may be invoked without any argument</p>"
        },
        {
          "id": 247535,
          "option": "<p>must be invoked with exactly one argument</p>"
        },
        {
          "id": 247536,
          "option": "<p>may be invoked with exactly one argument</p>"
        },
        {
          "id": 247537,
          "option": "<p>must be invoked without any argument</p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65666,
    "question": "What is the output of the following snippet?\n\n[CODE_BLOCK_0]",
    "code_blocks": [
      {
        "original": "def fun(x, y, z): return x + 2 * y + 3 * z print(fun(0, z=1, y=3)) ",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">fun</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">):</span> <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">y</span> <span class=\"o\">+</span> <span class=\"mi\">3</span> <span class=\"o\">*</span> <span class=\"n\">z</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">fun</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">))</span> \n</pre></div>\n"
      }
    ],
    "options": [
      {
        "id": 247594,
        "text": "`9`",
        "code_blocks": []
      },
      {
        "id": 247595,
        "text": "`0`",
        "code_blocks": []
      },
      {
        "id": 247596,
        "text": "`3`",
        "code_blocks": []
      },
      {
        "id": 247597,
        "text": "the snippet is erroneous",
        "code_blocks": []
      }
    ],
    "type": "single",
    "multiple_choice": false,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65666,
      "question": "<p>What is the output of the following snippet?</p>\n\n<code class=\"codep\">def fun(x, y, z):\n    return x + 2 * y + 3 * z\n\n\nprint(fun(0, z=1, y=3))\n\n</code>\n<br>",
      "type": "Single Choice",
      "htmlType": "radio",
      "optionsText": null,
      "options": [
        {
          "id": 247594,
          "option": "<p><code >9</code></p>"
        },
        {
          "id": 247595,
          "option": "<p><code >0</code></p>"
        },
        {
          "id": 247596,
          "option": "<p><code >3</code></p>"
        },
        {
          "id": 247597,
          "option": "<p>the snippet is erroneous</p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65669,
    "question": "What is the output of the following snippet?\n\n[CODE_BLOCK_0]",
    "code_blocks": [
      {
        "original": "tup = (1, 2, 4, 8) tup = tup[1:-1] tup = tup[0] print(tup) ",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"n\">tup</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span> <span class=\"n\">tup</span> <span class=\"o\">=</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"n\">tup</span> <span class=\"o\">=</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tup</span><span class=\"p\">)</span> \n</pre></div>\n"
      }
    ],
    "options": [
      {
        "id": 247606,
        "text": "`2`",
        "code_blocks": []
      },
      {
        "id": 247607,
        "text": "`(2)`",
        "code_blocks": []
      },
      {
        "id": 247608,
        "text": "`(2, )`",
        "code_blocks": []
      },
      {
        "id": 247609,
        "text": "the snippet is erroneous",
        "code_blocks": []
      }
    ],
    "type": "single",
    "multiple_choice": false,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65669,
      "question": "<p>What is the output of the following snippet?</p>\n\n<code class=\"codep\">tup = (1, 2, 4, 8)\ntup = tup[1:-1]\ntup = tup[0]\nprint(tup)\n\n</code>\n<br>",
      "type": "Single Choice",
      "htmlType": "radio",
      "optionsText": null,
      "options": [
        {
          "id": 247606,
          "option": "<p><code >2</code></p>"
        },
        {
          "id": 247607,
          "option": "<p><code >(2)</code></p>"
        },
        {
          "id": 247608,
          "option": "<p><code >(2, )</code></p>"
        },
        {
          "id": 247609,
          "option": "<p>the snippet is erroneous</p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65654,
    "question": "What is the output of the following snippet?\n\n[CODE_BLOCK_0]",
    "code_blocks": [
      {
        "original": "def f(x): if x == 0: return 0 return x + f(x - 1) print(f(3)) ",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span> <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span> <span class=\"k\">return</span> <span class=\"mi\">0</span> <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span> \n</pre></div>\n"
      }
    ],
    "options": [
      {
        "id": 247546,
        "text": "`6`",
        "code_blocks": []
      },
      {
        "id": 247547,
        "text": "`3`",
        "code_blocks": []
      },
      {
        "id": 247548,
        "text": "`1`",
        "code_blocks": []
      },
      {
        "id": 247549,
        "text": "the code is erroneous",
        "code_blocks": []
      }
    ],
    "type": "single",
    "multiple_choice": false,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65654,
      "question": "<p>What is the output of the following snippet?</p>\n\n<code class=\"codep\">def f(x):\n    if x == 0:\n    \treturn 0\n    return x + f(x - 1)\n    \n\t\nprint(f(3))\n\n</code>\n<br>",
      "type": "Single Choice",
      "htmlType": "radio",
      "optionsText": null,
      "options": [
        {
          "id": 247546,
          "option": "<p><code >6</code></p>"
        },
        {
          "id": 247547,
          "option": "<p><code >3</code></p>"
        },
        {
          "id": 247548,
          "option": "<p><code >1</code></p>"
        },
        {
          "id": 247549,
          "option": "<p>the code is erroneous</p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65661,
    "question": "What is the output of the following snippet?\n\n[CODE_BLOCK_0]",
    "code_blocks": [
      {
        "original": "def fun(x): if x % 2 == 0: return 1 else: return print(fun(fun(2)) + 1) ",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">fun</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span> <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span> <span class=\"k\">return</span> <span class=\"mi\">1</span> <span class=\"k\">else</span><span class=\"p\">:</span> <span class=\"k\">return</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">fun</span><span class=\"p\">(</span><span class=\"n\">fun</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">))</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> \n</pre></div>\n"
      }
    ],
    "options": [
      {
        "id": 247574,
        "text": "the code will cause a runtime error",
        "code_blocks": []
      },
      {
        "id": 247575,
        "text": "`1`",
        "code_blocks": []
      },
      {
        "id": 247576,
        "text": "`2`",
        "code_blocks": []
      },
      {
        "id": 247577,
        "text": "`None`",
        "code_blocks": []
      }
    ],
    "type": "single",
    "multiple_choice": false,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65661,
      "question": "<p>What is the output of the following snippet?</p>\n\n<code class=\"codep\">def fun(x):\n    if x % 2 == 0:\n    \treturn 1\n    else:\n    \treturn\n\n\nprint(fun(fun(2)) + 1)\n\n</code>\n<br>",
      "type": "Single Choice",
      "htmlType": "radio",
      "optionsText": null,
      "options": [
        {
          "id": 247574,
          "option": "<p>the code will cause a runtime error</p>"
        },
        {
          "id": 247575,
          "option": "<p><code >1</code></p>"
        },
        {
          "id": 247576,
          "option": "<p><code >2</code></p>"
        },
        {
          "id": 247577,
          "option": "<p><code >None</code></p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65664,
    "question": "Assuming that `my_tuple` is a correctly created tuple, the fact that tuples\nare immutable means that the following instruction:\n\n`my_tuple[1] = my_tuple[1] + my_tuple[0] `",
    "code_blocks": [],
    "options": [
      {
        "id": 247586,
        "text": "is illegal",
        "code_blocks": []
      },
      {
        "id": 247587,
        "text": "can be executed if and only if the tuple contains at least two elements",
        "code_blocks": []
      },
      {
        "id": 247588,
        "text": "is fully correct",
        "code_blocks": []
      },
      {
        "id": 247589,
        "text": "may be illegal if the tuple contains strings",
        "code_blocks": []
      }
    ],
    "type": "single",
    "multiple_choice": false,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65664,
      "question": "<p>Assuming that <code >my_tuple</code> is a correctly created tuple, the fact that tuples are immutable means that the following instruction:</p>\n\n<code class=\"codep\">my_tuple[1] = my_tuple[1] + my_tuple[0]\n\n</code>\n<br>\n<br>",
      "type": "Single Choice",
      "htmlType": "radio",
      "optionsText": null,
      "options": [
        {
          "id": 247586,
          "option": "<p>is illegal</p>"
        },
        {
          "id": 247587,
          "option": "<p>can be executed if and only if the tuple contains at least two elements</p>"
        },
        {
          "id": 247588,
          "option": "<p>is fully correct</p>"
        },
        {
          "id": 247589,
          "option": "<p>may be illegal if the tuple contains strings</p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65665,
    "question": "What is the output of the following snippet?\n\n[CODE_BLOCK_0]",
    "code_blocks": [
      {
        "original": "my_list = ['Mary', 'had', 'a', 'little', 'lamb'] def my_list(my_list): del\nmy_list[3] my_list[3] = 'ram' print(my_list(my_list)) ",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"n\">my_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;Mary&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;had&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;a&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;little&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;lamb&#39;</span><span class=\"p\">]</span> <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">my_list</span><span class=\"p\">(</span><span class=\"n\">my_list</span><span class=\"p\">):</span> <span class=\"k\">del</span>\n<span class=\"n\">my_list</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"n\">my_list</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ram&#39;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_list</span><span class=\"p\">(</span><span class=\"n\">my_list</span><span class=\"p\">))</span> \n</pre></div>\n"
      },
      {
        "original": "my_list = ['Mary', 'had', 'a', 'little', 'lamb'] def my_list(my_list): del\n",
        "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"n\">my_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;Mary&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;had&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;a&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;little&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;lamb&#39;</span><span class=\"p\">]</span> <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">my_list</span><span class=\"p\">(</span><span class=\"n\">my_list</span><span class=\"p\">):</span> <span class=\"k\">del</span>\n</pre></div>\n"
      }
    ],
    "options": [
      {
        "id": 247590,
        "text": "no output, the snippet is erroneous",
        "code_blocks": []
      },
      {
        "id": 247591,
        "text": "`['Mary', 'had', 'a', 'little', 'lamb']`",
        "code_blocks": []
      },
      {
        "id": 247592,
        "text": "`['Mary', 'had', 'a', 'lamb']`",
        "code_blocks": []
      },
      {
        "id": 247593,
        "text": "`['Mary', 'had', 'a', 'ram']`",
        "code_blocks": []
      }
    ],
    "type": "single",
    "multiple_choice": false,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65665,
      "question": "<p>What is the output of the following snippet?</p>\n\n<code class=\"codep\">my_list =  ['Mary', 'had', 'a', 'little', 'lamb']\n\n\ndef my_list(my_list):\n    del my_list[3]\n    my_list[3] = 'ram'\n\n\nprint(my_list(my_list))\n\n</code>\n<br>",
      "type": "Single Choice",
      "htmlType": "radio",
      "optionsText": null,
      "options": [
        {
          "id": 247590,
          "option": "<p>no output, the snippet is erroneous</p>"
        },
        {
          "id": 247591,
          "option": "<p><code >['Mary', 'had', 'a', 'little', 'lamb']</code></p>"
        },
        {
          "id": 247592,
          "option": "<p><code >['Mary', 'had', 'a', 'lamb']</code></p>"
        },
        {
          "id": 247593,
          "option": "<p><code >['Mary', 'had', 'a', 'ram']</code></p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65660,
    "question": "Which of the following statements are _true_? (Select _two_ answers)",
    "code_blocks": [],
    "options": [
      {
        "id": 247570,
        "text": "The `None` value cannot be used outside functions",
        "code_blocks": []
      },
      {
        "id": 247571,
        "text": "The `None` value can be assigned to variables",
        "code_blocks": []
      },
      {
        "id": 247572,
        "text": "The `None` value can be compared with variables",
        "code_blocks": []
      },
      {
        "id": 247573,
        "text": "The `None` value can be used as an argument of arithmetic operators",
        "code_blocks": []
      }
    ],
    "type": "multiple",
    "multiple_choice": true,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65660,
      "question": "<p>Which of the following statements are <u>true</u>? &nbsp;&nbsp;(Select <u>two</u> answers)</p>",
      "type": "Multiple Choice",
      "htmlType": "checkbox",
      "optionsText": null,
      "options": [
        {
          "id": 247570,
          "option": "<p>The <code >None</code> value cannot be used outside functions</p>"
        },
        {
          "id": 247571,
          "option": "<p>The <code >None</code> value can be assigned to variables</p>"
        },
        {
          "id": 247572,
          "option": "<p>The <code >None</code> value can be compared with variables</p>"
        },
        {
          "id": 247573,
          "option": "<p>The <code >None</code> value can be used as an argument of arithmetic operators</p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  },
  {
    "id": 65659,
    "question": "Which of the following lines properly starts a function using two parameters,\nboth with zeroed default values?",
    "code_blocks": [],
    "options": [
      {
        "id": 247566,
        "text": "[CODE_BLOCK_0]",
        "code_blocks": [
          {
            "original": "def fun(a=0, b=0):",
            "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">fun</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n</pre></div>\n"
          }
        ]
      },
      {
        "id": 247567,
        "text": "[CODE_BLOCK_0]",
        "code_blocks": [
          {
            "original": "def fun(a=b=0):",
            "highlighted": "<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">fun</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n</pre></div>\n"
          }
        ]
      },
      {
        "id": 247568,
        "text": "`fun fun(a=0, b):`",
        "code_blocks": []
      },
      {
        "id": 247569,
        "text": "`fun fun(a, b=0):`",
        "code_blocks": []
      }
    ],
    "type": "single",
    "multiple_choice": false,
    "explanation": "This question is from PE1 Module 4 Test, covering Python functions, tuples, dictionaries, and exceptions.",
    "original_data": {
      "id": 65659,
      "question": "<p>Which of the following lines properly starts a function using two parameters, both with zeroed default values?</p>",
      "type": "Single Choice",
      "htmlType": "radio",
      "optionsText": null,
      "options": [
        {
          "id": 247566,
          "option": "<p><code >def fun(a=0, b=0):</code></p>"
        },
        {
          "id": 247567,
          "option": "<p><code >def fun(a=b=0):</code></p>"
        },
        {
          "id": 247568,
          "option": "<p><code >fun fun(a=0, b):</code></p>"
        },
        {
          "id": 247569,
          "option": "<p><code >fun fun(a, b=0):</code></p>"
        }
      ],
      "shuffleOptions": true,
      "timeLimitInMinutes": 0,
      "timeLimitInSeconds": 0,
      "timeWarningInMinutes": 0,
      "timeWarningInSeconds": 0,
      "audioSrc": null,
      "audioPlayLimit": 0,
      "maxResponses": null,
      "sectionId": 3096
    }
  }
]

# Helper function to get questions
def get_all_questions():
    """Return all questions in the dataset."""
    return PCEP_MODULE_4_QUESTIONS

def get_question_by_id(question_id):
    """Get a specific question by ID."""
    for question in PCEP_MODULE_4_QUESTIONS:
        if question['id'] == question_id:
            return question
    return None

def get_question_count():
    """Get the total number of questions."""
    return len(PCEP_MODULE_4_QUESTIONS)

if __name__ == "__main__":
    print(f"PCEP Module 4 Questions Dataset loaded successfully!")
    print(f"Total questions: {get_question_count()}")
    print(f"Question IDs: {[q['id'] for q in PCEP_MODULE_4_QUESTIONS]}")
